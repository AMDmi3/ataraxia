From 38a2474834a76171eba1bf22a51e226fec1e7d17 Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Sun, 26 Apr 2020 16:15:41 +0300
Subject: [PATCH] add support for Ataraxia Linux

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 include/clang/Driver/Distro.h       |  5 +++++
 lib/Driver/Distro.cpp               |  3 +++
 lib/Driver/ToolChains/Gnu.cpp       |  4 +++-
 lib/Driver/ToolChains/Linux.cpp     | 15 +++++++++++----
 lib/Driver/ToolChains/Linux.h       |  1 +
 lib/Frontend/CompilerInvocation.cpp |  8 ++++++++
 6 files changed, 31 insertions(+), 5 deletions(-)

diff --git a/include/clang/Driver/Distro.h b/include/clang/Driver/Distro.h
index d382cf77..86cbff93 100644
--- a/include/clang/Driver/Distro.h
+++ b/include/clang/Driver/Distro.h
@@ -28,6 +28,7 @@ public:
     // the first and last known member in the family, e.g. IsRedHat().
     AlpineLinux,
     ArchLinux,
+    AtaraxiaLinux,
     DebianLenny,
     DebianSqueeze,
     DebianWheezy,
@@ -127,6 +128,10 @@ public:
     return DistroVal == AlpineLinux;
   }
 
+  bool IsAtaraxiaLinux() const {
+    return DistroVal == AtaraxiaLinux;
+  }
+
   bool IsGentoo() const {
     return DistroVal == Gentoo;
   }
diff --git a/lib/Driver/Distro.cpp b/lib/Driver/Distro.cpp
index 06707fef..e3567eff 100644
--- a/lib/Driver/Distro.cpp
+++ b/lib/Driver/Distro.cpp
@@ -160,6 +160,9 @@ static Distro::DistroType DetectDistro(llvm::vfs::FileSystem &VFS,
   if (VFS.exists("/etc/arch-release"))
     return Distro::ArchLinux;
 
+  if (VFS.exists("/etc/ataraxia-release"))
+    return Distro::AtaraxiaLinux;
+
   if (VFS.exists("/etc/gentoo-release"))
     return Distro::Gentoo;
 
diff --git a/lib/Driver/ToolChains/Gnu.cpp b/lib/Driver/ToolChains/Gnu.cpp
index da197e47..e9458c8d 100644
--- a/lib/Driver/ToolChains/Gnu.cpp
+++ b/lib/Driver/ToolChains/Gnu.cpp
@@ -375,7 +375,9 @@ void tools::gnutools::Linker::ConstructJob(Compilation &C, const JobAction &JA,
   if (!D.SysRoot.empty())
     CmdArgs.push_back(Args.MakeArgString("--sysroot=" + D.SysRoot));
 
-  if (IsPIE)
+  if (Args.hasArg(options::OPT_nopie))
+     CmdArgs.push_back("-nopie");
+  else if (IsPIE)
     CmdArgs.push_back("-pie");
 
   if (IsStaticPIE) {
diff --git a/lib/Driver/ToolChains/Linux.cpp b/lib/Driver/ToolChains/Linux.cpp
index bff1ab10..567db2a2 100644
--- a/lib/Driver/ToolChains/Linux.cpp
+++ b/lib/Driver/ToolChains/Linux.cpp
@@ -242,12 +242,12 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
 
   Distro Distro(D.getVFS(), Triple);
 
-  if (Distro.IsAlpineLinux() || Triple.isAndroid()) {
+  if (Distro.IsAlpineLinux() || Triple.isAndroid() || Distro.IsAtaraxiaLinux()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("now");
   }
 
-  if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux() ||
+  if (Distro.IsOpenSUSE() || Distro.IsUbuntu() || Distro.IsAlpineLinux() || Distro.IsAtaraxiaLinux() ||
       Triple.isAndroid()) {
     ExtraOpts.push_back("-z");
     ExtraOpts.push_back("relro");
@@ -917,8 +917,15 @@ void Linux::AddIAMCUIncludeArgs(const ArgList &DriverArgs,
 }
 
 bool Linux::isPIEDefault() const {
-  return (getTriple().isAndroid() && !getTriple().isAndroidVersionLT(16)) ||
-          getTriple().isMusl() || getSanitizerArgs().requiresPIE();
+  return getSanitizerArgs().requiresPIE() || 
+         Linux::getTriple().getVendorName().compare("ataraxia") == 0;
+}
+
+unsigned Linux::GetDefaultStackProtectorLevel(bool KernelOrKext) const {
+  StringRef VendorName = Linux::getTriple().getVendorName();
+  if (VendorName.compare("ataraxia") == 0)
+    return 2;
+  return Generic_ELF::GetDefaultStackProtectorLevel(KernelOrKext);
 }
 
 bool Linux::isNoExecStackDefault() const {
diff --git a/lib/Driver/ToolChains/Linux.h b/lib/Driver/ToolChains/Linux.h
index f5518eac..65c22f9e 100644
--- a/lib/Driver/ToolChains/Linux.h
+++ b/lib/Driver/ToolChains/Linux.h
@@ -36,6 +36,7 @@ public:
   CXXStdlibType GetDefaultCXXStdlibType() const override;
   bool isPIEDefault() const override;
   bool isNoExecStackDefault() const override;
+  unsigned GetDefaultStackProtectorLevel(bool KernelOrKext) const override;
   bool IsMathErrnoDefault() const override;
   SanitizerMask getSupportedSanitizers() const override;
   void addProfileRTLibs(const llvm::opt::ArgList &Args,
diff --git a/lib/Frontend/CompilerInvocation.cpp b/lib/Frontend/CompilerInvocation.cpp
index e98a407a..866ff512 100644
--- a/lib/Frontend/CompilerInvocation.cpp
+++ b/lib/Frontend/CompilerInvocation.cpp
@@ -3610,6 +3610,14 @@ bool CompilerInvocation::CreateFromArgs(CompilerInvocation &Res,
       !LangOpts.Sanitize.has(SanitizerKind::Memory) &&
       !LangOpts.Sanitize.has(SanitizerKind::KernelMemory);
 
+  // Set the macro before the command line macros are being processed, so it can be
+  // properly unset if required to in case of incompatibilities.
+  if (Res.getCodeGenOpts().OptimizationLevel > 0 &&
+      (DashX.getLanguage() == InputKind::C || DashX.getLanguage() == InputKind::CXX) &&
+      !LangOpts.Sanitize.has(SanitizerKind::Address)) {
+    Res.getPreprocessorOpts().addMacroDef("_FORTIFY_SOURCE=2");
+  }
+
   ParsePreprocessorArgs(Res.getPreprocessorOpts(), Args, Diags,
                         Res.getFrontendOpts().ProgramAction);
   ParsePreprocessorOutputArgs(Res.getPreprocessorOutputOpts(), Args,
-- 
2.25.4

