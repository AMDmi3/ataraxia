From 36b49fd21d35fe2374f32f8786d802b073b474e7 Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Mon, 20 Apr 2020 22:34:49 +0900
Subject: [PATCH] libressl

---
 src/tss2-esys/esys_crypto_ossl.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/tss2-esys/esys_crypto_ossl.c b/src/tss2-esys/esys_crypto_ossl.c
index 3c5d86d69..f5d76e718 100644
--- a/src/tss2-esys/esys_crypto_ossl.c
+++ b/src/tss2-esys/esys_crypto_ossl.c
@@ -12,6 +12,7 @@
 #include <openssl/aes.h>
 #include <openssl/rsa.h>
 #include <openssl/engine.h>
+#include <openssl/rand.h>
 #include <stdio.h>
 
 #include "tss2_esys.h"
@@ -510,7 +511,7 @@ iesys_cryptossl_random2b(TPM2B_NONCE * nonce, size_t num_bytes)
         nonce->size = num_bytes;
     }
 
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
     RAND_set_rand_method(RAND_OpenSSL());
 #else
     RAND_set_rand_method(RAND_SSLeay());
@@ -548,7 +549,7 @@ iesys_cryptossl_pk_encrypt(TPM2B_PUBLIC * pub_tpm_key,
                            size_t * out_size, const char *label)
 {
     const RAND_METHOD *rand_save = RAND_get_rand_method();
-#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined(LIBRESSL_VERSION_NUMBER)
     RAND_set_rand_method(RAND_OpenSSL());
 #else
     RAND_set_rand_method(RAND_SSLeay());
@@ -663,6 +664,7 @@ iesys_cryptossl_pk_encrypt(TPM2B_PUBLIC * pub_tpm_key,
                    "Could not duplicate OAEP label", cleanup);
     }
 
+#ifdef EVP_PKEY_CTX_set0_rsa_oaep_label
     if (1 != EVP_PKEY_CTX_set0_rsa_oaep_label(ctx, label_copy, strlen(label_copy)+1)) {
         OPENSSL_free(label_copy);
         goto_error(r, TSS2_ESYS_RC_GENERAL_FAILURE,
@@ -673,6 +675,9 @@ iesys_cryptossl_pk_encrypt(TPM2B_PUBLIC * pub_tpm_key,
         goto_error(r, TSS2_ESYS_RC_GENERAL_FAILURE,
                    "Could not set hash algorithm.", cleanup);
     }
+#else
+    (void) label;
+#endif
 
     /* Determine out size */
     if (1 != EVP_PKEY_encrypt(ctx, NULL, out_size, in_buffer, in_size)) {

